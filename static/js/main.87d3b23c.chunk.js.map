{"version":3,"sources":["components/App/SearchBar/SearchBar.js","components/App/Business/Business.js","components/App/BusinessList/BusinessList.js","components/App/Util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","state","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","this","setState","event","target","value","searchYelp","preventDefault","Object","keys","map","sortByOptionValue","onClick","handleSortByChange","className","getSortByClass","key","renderSortByOptions","onChange","placeholder","React","Component","Business","business","class","src","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","BusinessList","businesses","id","Yelp","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","zip_code","categories","title","review_count","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87d3b23c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n \r\n\r\nclass SearchBar extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term:'',\r\n      location:'',\r\n      sortBy:'best_match'\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n \r\n      this.sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n        };\r\n    } \r\n\r\n    getSortByClass(sortByOption){\r\n      if(this.state.sortBy===sortByOption) {\r\n        return 'active'\r\n      } else{return ''}\r\n    }\r\n    \r\n    handleSortByChange(sortByOption){\r\n      this.setState({sortBy:sortByOption})\r\n    }\r\n\r\n    handleTermChange(event){\r\n      this.setState({term: event.target.value})\r\n    }\r\n    \r\n    handleLocationChange(event){\r\n      this.setState({location: event.target.value})\r\n    }\r\n\r\n    handleSearch(event) {\r\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n      event.preventDefault()\r\n    }\r\n  \r\n  renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => { let sortByOptionValue = this.sortByOptions[sortByOption];\r\n        return <li onClick={this.handleSortByChange.bind(this,sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>});\r\n    }\r\n\r\n        render()\r\n        {\r\n        return (\r\n\r\n            <div className=\"SearchBar\" >\r\n            <div className=\"SearchBar-sort-options\">\r\n              <ul>\r\n                {this.renderSortByOptions()}\r\n              </ul>\r\n            </div>\r\n            <div className=\"SearchBar-fields\">\r\n              <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n              <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n            </div>\r\n            <div className=\"SearchBar-submit\">\r\n              <a onClick={this.handleSearch}>Lets Go</a>\r\n            </div>\r\n          </div>\r\n        )}\r\n    }\r\n\r\nexport default SearchBar;\r\n\r\n","import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\nrender() {\r\n const {business} = this.props;\r\n  return(\r\n    <div class=\"Business\">\r\n  <div class=\"image-container\">\r\n    <img src={business.imageSrc} alt=\"\"/>\r\n  </div>\r\n  <h2>{business.name}</h2>\r\n  <div class=\"Business-information\">\r\n    <div class=\"Business-address\">\r\n      <p>{business.address}</p>\r\n      <p>{business.city}</p>\r\n      <p>{business.state} {business.zipCode}</p>\r\n    </div>\r\n    <div class=\"Business-reviews\">\r\n      <h3>{business.category}</h3>\r\n      <h3 class=\"rating\">{business.rating} stars</h3>\r\n      <p>{business.reviewCount} reviews</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n )\r\n}\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business'\r\n\r\nclass BusinessList extends React.Component {\r\nrender() {\r\nreturn(\r\n<div className=\"BusinessList\">\r\n {\r\n  this.props.businesses.map((business) =>\r\n  {return <Business key={business.id} business={business}/>;\r\n })\r\n}\r\n</div>\r\n    );\r\n  }\r\n} \r\n\r\nexport default BusinessList; ","const apiKey = 'dl_XPgsbZk0i7tvg-zOtAcj1AgLchO5NsTX5RS96wcLGbYQ6X5eDbnRTxuqvpZ22Fh7cYHES4fhJYRTzcNdUKgez3JmWLnacdCFmC51MjI1BrnolAmmIC_Ideg76XnYx';\r\n\r\nconst Yelp = {\r\n  searchYelp(term,location,sortBy) {\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,{\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`,\r\n    },\r\n    }).then((response)=> {\r\n    return response.json();\r\n  }).then((jsonResponse) => {\r\n    if(jsonResponse.businesses) {\r\n      return jsonResponse.businesses.map(((business) => {\r\n        console.log(business);\r\n        return {\r\n        id:business.id,\r\n        imageSrc: business.image_url,\r\n        name: business.name,\r\n        address: business.location.address1,\r\n        city: business.location.city,\r\n        state: business.location.state,\r\n        zipCode: business.location.zip_code,\r\n        category: business.categories[0].title,\r\n        rating: business.rating,\r\n        reviewCount: business.review_count,  \r\n        };\r\n      }));\r\n    }\r\n  })\r\n}\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar/SearchBar';\nimport BusinessList from './BusinessList/BusinessList';\nimport Yelp from './Util/Yelp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); \n  this.state = { \n    businesses: [],\n  };\n\n  this.searchYelp = this.searchYelp.bind(this);\n}\n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {this.setState(this.state.businesses = businesses)})\n  }\n\n  render() {\n  return (\n    <div className=\"App\">\n    <h1>ravenous</h1>\n    <SearchBar searchYelp={this.searchYelp} />\n    <BusinessList businesses= {this.state.businesses} />\n  </div>\n  );\n}\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}